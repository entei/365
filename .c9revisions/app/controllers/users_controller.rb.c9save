{"ts":1380352699051,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"class UsersController < ApplicationController\n  #before_action :set_user, only: [:show, :edit, :update, :destroy]\n  before_filter :authenticate_user!, only: [:edit, :show, :update, :destroy]\n  \n  # GET /users\n  # GET /users.json\n  def index\n    @users = User.all\n  end\n\n  # GET /users/1\n  # GET /users/1.json\n  def show\n      @user = current_user\n  end\n\n  # GET /users/new\n  def new\n    @user = User.new\n  end\n\n  # GET /users/1/edit\n  def edit\n  end\n\n  # POST /users\n  # POST /users.json\n  def create\n    @user = User.new(user_params)\n\n    respond_to do |format|\n      if @user.save\n        format.html { redirect_to @user, notice: 'User was successfully created.' }\n        format.json { render action: 'show', status: :created, location: @user }\n      else\n        format.html { render action: 'new' }\n        format.json { render json: @user.errors, status: :unprocessable_entity }\n      end\n    end\n  end\n\n  # PATCH/PUT /users/1\n  # PATCH/PUT /users/1.json\n  def update\n    respond_to do |format|\n      if @user.update(user_params)\n        format.html { redirect_to @user, notice: 'User was successfully updated.' }\n        format.json { head :no_content }\n      else\n        format.html { render action: 'edit' }\n        format.json { render json: @user.errors, status: :unprocessable_entity }\n      end\n    end\n  end\n\n  # DELETE /users/1\n  # DELETE /users/1.json\n  def destroy\n    @user.destroy\n    respond_to do |format|\n      format.html { redirect_to users_url }\n      format.json { head :no_content }\n    end\n  end\n\n  private\n    # Use callbacks to share common setup or constraints between actions.\n    def set_user\n      @user = User.find(params[:id])\n    end\n\n    # Never trust parameters from the scary internet, only allow the white list through.\n    def user_params\n      params.require(:user).permit(:username, :nickname, :provider, :url)\n    end\nend\n"]],"start1":0,"start2":0,"length1":0,"length2":1868}]],"length":1868}
{"contributors":[],"silentsave":false,"ts":1380352886889,"patch":[[{"diffs":[[0,"rovider,"],[1," :timezone,"],[0," :url)\n "]],"start1":1841,"start2":1841,"length1":16,"length2":27}]],"length":1879,"saved":false}
{"contributors":[],"silentsave":false,"ts":1380463046999,"patch":[[{"diffs":[[0,"    end\n"],[1,"    \n    def upcmng_e(user)\n        user.events\n    end\n"],[0,"end\n"]],"start1":1867,"start2":1867,"length1":12,"length2":68}]],"length":1935,"saved":false}
{"ts":1380463114626,"patch":[[{"diffs":[[0,"end\n"],[-1,"    \n    def upcmng_e(user)\n        user.events\n    end\n"],[0,"end\n"]],"start1":1871,"start2":1871,"length1":64,"length2":8}]],"length":1879,"saved":false}
{"contributors":[],"silentsave":false,"ts":1380871314187,"patch":[[{"diffs":[[0,"ore_"],[-1,"filter"],[1,"action"],[0," :au"]],"start1":119,"start2":119,"length1":14,"length2":14}]],"length":1879,"saved":false}
{"contributors":[],"silentsave":false,"ts":1380901705639,"patch":[[{"diffs":[[0,"er.save\n"],[1,"        # Tell the UserMailer to send a welcome Email after save\n        UserMailer.welcome_email(@user).deliver\n        \n"],[0,"        "]],"start1":575,"start2":575,"length1":16,"length2":138}]],"length":2001,"saved":false}
{"ts":1380906238197,"patch":[[{"diffs":[[0,"l { redirect_to "],[-1,"@user"],[1,"calendar_path"],[0,", notice: 'User "]],"start1":723,"start2":723,"length1":37,"length2":45}]],"length":2009,"saved":false}
{"ts":1380906604213,"patch":[[{"diffs":[[0,"_to "],[-1,"calendar_path"],[1,"@user"],[0,", no"]],"start1":735,"start2":735,"length1":21,"length2":13}]],"length":2001,"saved":false}
{"contributors":[],"silentsave":false,"ts":1381407022472,"patch":[[{"diffs":[[0,"roy]"],[-1,"\n  \n  # GET /users\n  # GET /users.json\n  def index\n    @users = User.all\n  end"],[0,"\n\n  "]],"start1":186,"start2":186,"length1":86,"length2":8}]],"length":1923,"saved":false}
